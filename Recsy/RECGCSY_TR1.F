!  This file is part of the RECSY library. See http://www.cs.umu.se/~isak/recsy
!  Copyright 2003 Umeå University, Sweden
!
      SUBROUTINE RECGCSY_TR1(M, N, A, LDA, B, LDB, C, LDC, D, LDD, E, LDE, F, LDF, INFO, MACHINE)
!     Solves A*X-Y*B=C, D*X-Y*E=F
!     A (M*M) and B (N*N) quasi-triangular, D (M*M) and E (N*N) triangular
!     Iff close eigenvalues are detected, INFO is non-zero and elements 
!     of the C (M*N) and F (M*N) matrices are no longer valid
!
      IMPLICIT NONE
!
      INTENT(IN) M,N,A,LDA,B,LDB,LDC,MACHINE
      INTENT(OUT) INFO
      INTENT(INOUT) C
!     .. Scalar Arguments ..
      INTEGER          :: M, N, LDA, LDB, LDC, LDD, LDE, LDF, INFO
!     .. Array Arguments ..
      DOUBLE PRECISION :: A(0:LDA-1,0:*), B(0:LDB-1,0:*), C(0:LDC-1,0:*), MACHINE(0:*)
      DOUBLE PRECISION :: D(0:LDD-1,0:*), E(0:LDE-1,0:*), F(0:LDF-1,0:*)
!     .. Local Scalars ..
      INTEGER          :: I, II, J, JJ, L
!     .. Local Arrays ..
      DOUBLE PRECISION :: G(0:63)
      DOUBLE PRECISION :: H(0:7)
!     .. Executable Statements ..
!
      INFO = 0
      I = M-1
      DO WHILE (I.GE.0) 
         IF (I.NE.0.AND.A(I,I-1).NE.0) THEN
            II = 2
         ELSE
            II = 1
         END IF
         I = I-II+1
         J = 0
         DO WHILE (J.LT.N)
            IF (J.NE.N-1.AND.B(J+1,J).NE.0) THEN
               JJ = 2
            ELSE
               JJ = 1
            END IF
            IF (II.EQ.1) THEN
               IF (JJ.EQ.1) THEN
                  G(0) = A(I,I)
                  G(1) = D(I,I)
                  G(2) = -B(J,J)
                  G(3) = -E(J,J)
                  CALL RECSY_SOLVE_22(C(I,J), F(I,J), G, INFO, MACHINE)
                  IF (INFO.NE.0) RETURN
                  SELECT CASE (N-J-1)
                  CASE (1)
                     C(I,J+1) = C(I,J+1) + F(I,J) * B(J,J+1)
                     F(I,J+1) = F(I,J+1) + F(I,J) * E(J,J+1)
                  CASE (2)                            
                     C(I,J+1) = C(I,J+1) + F(I,J) * B(J,J+1)
                     C(I,J+2) = C(I,J+2) + F(I,J) * B(J,J+2)
                     F(I,J+1) = F(I,J+1) + F(I,J) * E(J,J+1)
                     F(I,J+2) = F(I,J+2) + F(I,J) * E(J,J+2)
                  CASE (3)                            
                     C(I,J+1) = C(I,J+1) + F(I,J) * B(J,J+1)
                     C(I,J+2) = C(I,J+2) + F(I,J) * B(J,J+2)
                     C(I,J+3) = C(I,J+3) + F(I,J) * B(J,J+3)
                     F(I,J+1) = F(I,J+1) + F(I,J) * E(J,J+1)
                     F(I,J+2) = F(I,J+2) + F(I,J) * E(J,J+2)
                     F(I,J+3) = F(I,J+3) + F(I,J) * E(J,J+3)
                  END SELECT
               ELSE
                  G(0) = A(I,I)
                  G(1) = 0
                  G(2) = D(I,I)
                  G(3) = 0
                  G(4) = 0
                  G(5) = A(I,I)
                  G(6) = 0
                  G(7) = D(I,I)
                  G(8) = -B(J,J)
                  G(9) = -B(J,J+1)
                  G(10) = -E(J,J)
                  G(11) = -E(J,J+1)
                  G(12) = -B(J+1,J)
                  G(13) = -B(J+1,J+1)
                  G(14) = 0 ! E(J+1,J)
                  G(15) = -E(J+1,J+1)
                  H(0) = C(I,J)
                  H(1) = C(I,J+1)
                  H(2) = F(I,J)
                  H(3) = F(I,J+1)
                  CALL RECSY_SOLVE_44(H, G, INFO, MACHINE)
                  IF (INFO.NE.0) RETURN
                  C(I,J) = H(0)
                  C(I,J+1) = H(1)
                  F(I,J) = H(2)
                  F(I,J+1) = H(3)
                  SELECT CASE (N-J-2)
                  CASE (1)
                     C(I,J+2) = C(I,J+2) + F(I,J)*B(J,J+2) + F(I,J+1)*B(J+1,J+2)
                     F(I,J+2) = F(I,J+2) + F(I,J)*E(J,J+2) + F(I,J+1)*E(J+1,J+2)
                  CASE (2)
                     C(I,J+2) = C(I,J+2) + F(I,J)*B(J,J+2) + F(I,J+1)*B(J+1,J+2)
                     C(I,J+3) = C(I,J+3) + F(I,J)*B(J,J+3) + F(I,J+1)*B(J+1,J+3)
                     F(I,J+2) = F(I,J+2) + F(I,J)*E(J,J+2) + F(I,J+1)*E(J+1,J+2)
                     F(I,J+3) = F(I,J+3) + F(I,J)*E(J,J+3) + F(I,J+1)*E(J+1,J+3)
                  END SELECT
               END IF
            ELSE
               IF (JJ.EQ.1) THEN
                  G(0) = A(I,I)
                  G(1) = A(I+1,I)
                  G(2) = D(I,I)
                  G(3) = 0 ! D(I+1,I)
                  G(4) = A(I,I+1)
                  G(5) = A(I+1,I+1)
                  G(6) = D(I,I+1)
                  G(7) = D(I+1,I+1)
                  G(8) = -B(J,J)
                  G(9) = 0
                  G(10) = -E(J,J)
                  G(11) = 0
                  G(12) = 0
                  G(13) = -B(J,J)
                  G(14) = 0
                  G(15) = -E(J,J)
                  H(0) = C(I,J)
                  H(1) = C(I+1,J)
                  H(2) = F(I,J)
                  H(3) = F(I+1,J)
                  CALL RECSY_SOLVE_44(H, G, INFO, MACHINE)
                  C(I,J) = H(0)
                  C(I+1,J) = H(1)
                  F(I,J) = H(2)
                  F(I+1,J) = H(3)
                  IF (INFO.NE.0) RETURN
                  SELECT CASE (N-J-1)
                  CASE (1)
                     C(I,J+1) = C(I,J+1) + F(I,J) * B(J,J+1)
                     C(I+1,J+1) = C(I+1,J+1) + F(I+1,J) * B(J,J+1)
                     F(I,J+1) = F(I,J+1) + F(I,J) * E(J,J+1)
                     F(I+1,J+1) = F(I+1,J+1) + F(I+1,J) * E(J,J+1)
                  CASE (2)                            
                     C(I,J+1) = C(I,J+1) + F(I,J) * B(J,J+1)
                     C(I+1,J+1) = C(I+1,J+1) + F(I+1,J) * B(J,J+1)
                     C(I,J+2) = C(I,J+2) + F(I,J) * B(J,J+2)
                     C(I+1,J+2) = C(I+1,J+2) + F(I+1,J) * B(J,J+2)
                     F(I,J+1) = F(I,J+1) + F(I,J) * E(J,J+1)
                     F(I+1,J+1) = F(I+1,J+1) + F(I+1,J) * E(J,J+1)
                     F(I,J+2) = F(I,J+2) + F(I,J) * E(J,J+2)
                     F(I+1,J+2) = F(I+1,J+2) + F(I+1,J) * E(J,J+2)
                  CASE (3)                            
                     C(I,J+1) = C(I,J+1) + F(I,J) * B(J,J+1)
                     C(I+1,J+1) = C(I+1,J+1) + F(I+1,J) * B(J,J+1)
                     C(I,J+2) = C(I,J+2) + F(I,J) * B(J,J+2)
                     C(I+1,J+2) = C(I+1,J+2) + F(I+1,J) * B(J,J+2)
                     C(I,J+3) = C(I,J+3) + F(I,J) * B(J,J+3)
                     C(I+1,J+3) = C(I+1,J+3) + F(I+1,J) * B(J,J+3)
                     F(I,J+1) = F(I,J+1) + F(I,J) * E(J,J+1)
                     F(I+1,J+1) = F(I+1,J+1) + F(I+1,J) * E(J,J+1)
                     F(I,J+2) = F(I,J+2) + F(I,J) * E(J,J+2)
                     F(I+1,J+2) = F(I+1,J+2) + F(I+1,J) * E(J,J+2)
                     F(I,J+3) = F(I,J+3) + F(I,J) * E(J,J+3)
                     F(I+1,J+3) = F(I+1,J+3) + F(I+1,J) * E(J,J+3)
                  END SELECT
               ELSE
                  DO L = 0,63
                     G(L) = 0
                  END DO
                  G( 0) = A(I,I)
                  G( 1) = A(I+1,I)
                  G( 8) = A(I,I+1)
                  G( 9) = A(I+1,I+1)
                  G(18) = A(I,I)
                  G(19) = A(I+1,I)
                  G(26) = A(I,I+1)
                  G(27) = A(I+1,I+1)
                  G( 4) = D(I,I)
                  ! G( 5) = 0 ! D(I+1,I)
                  G(12) = D(I,I+1)
                  G(13) = D(I+1,I+1)
                  G(22) = D(I,I)
                  ! G(23) = 0 ! D(I+1,I)
                  G(30) = D(I,I+1)
                  G(31) = D(I+1,I+1)
                  G(32) = -B(J,J)
                  G(34) = -B(J,J+1)
                  G(48) = -B(J+1,J)
                  G(50) = -B(J+1,J+1)
                  G(41) = -B(J,J)
                  G(43) = -B(J,J+1)
                  G(57) = -B(J+1,J)
                  G(59) = -B(J+1,J+1)
                  G(36) = -E(J,J)
                  G(38) = -E(J,J+1)
                  ! G(52) = 0 ! E(J+1,J)
                  G(54) = -E(J+1,J+1)
                  G(45) = -E(J,J)
                  G(47) = -E(J,J+1)
                  ! G(61) = 0 ! E(J+1,J)
                  G(63) = -E(J+1,J+1)
                  H(0) = C(I,J)
                  H(1) = C(I+1,J)
                  H(2) = C(I,J+1)
                  H(3) = C(I+1,J+1)
                  H(4) = F(I,J)
                  H(5) = F(I+1,J)
                  H(6) = F(I,J+1)
                  H(7) = F(I+1,J+1)
                  CALL RECSY_SOLVE_NN(8, H, G, INFO, MACHINE)
                  IF (INFO.NE.0) RETURN
                  C(I,J) = H(0)
                  C(I+1,J) = H(1)
                  C(I,J+1) = H(2)
                  C(I+1,J+1) = H(3)
                  F(I,J) = H(4)
                  F(I+1,J) = H(5)
                  F(I,J+1) = H(6)
                  F(I+1,J+1) = H(7)
                  SELECT CASE (N-J-2)
                  CASE (1)
                     C(I,J+2) = C(I,J+2) + F(I,J)*B(J,J+2) + F(I,J+1)*B(J+1,J+2)
                     C(I+1,J+2) = C(I+1,J+2) + F(I+1,J)*B(J,J+2) + F(I+1,J+1)*B(J+1,J+2)
                     F(I,J+2) = F(I,J+2) + F(I,J)*E(J,J+2) + F(I,J+1)*E(J+1,J+2)
                     F(I+1,J+2) = F(I+1,J+2) + F(I+1,J)*E(J,J+2) + F(I+1,J+1)*E(J+1,J+2)
                  CASE (2)
                     C(I,J+2) = C(I,J+2) + F(I,J)*B(J,J+2) + F(I,J+1)*B(J+1,J+2)
                     C(I,J+3) = C(I,J+3) + F(I,J)*B(J,J+3) + F(I,J+1)*B(J+1,J+3)
                     C(I+1,J+2) = C(I+1,J+2) + F(I+1,J)*B(J,J+2) + F(I+1,J+1)*B(J+1,J+2)
                     C(I+1,J+3) = C(I+1,J+3) + F(I+1,J)*B(J,J+3) + F(I+1,J+1)*B(J+1,J+3)
                     F(I,J+2) = F(I,J+2) + F(I,J)*E(J,J+2) + F(I,J+1)*E(J+1,J+2)
                     F(I,J+3) = F(I,J+3) + F(I,J)*E(J,J+3) + F(I,J+1)*E(J+1,J+3)
                     F(I+1,J+2) = F(I+1,J+2) + F(I+1,J)*E(J,J+2) + F(I+1,J+1)*E(J+1,J+2)
                     F(I+1,J+3) = F(I+1,J+3) + F(I+1,J)*E(J,J+3) + F(I+1,J+1)*E(J+1,J+3)
                  END SELECT
               END IF
            END IF
            J = J+JJ
         END DO
         IF (II.EQ.1) THEN
            SELECT CASE (I)
            CASE (1)
               SELECT CASE (N)
               CASE (1)
                  C(0,0) = C(0,0) - A(0,1) * C(1,0)
                  F(0,0) = F(0,0) - D(0,1) * C(1,0)
               CASE (2)                            
                  C(0,0) = C(0,0) - A(0,1) * C(1,0)
                  C(0,1) = C(0,1) - A(0,1) * C(1,1)
                  F(0,0) = F(0,0) - D(0,1) * C(1,0)
                  F(0,1) = F(0,1) - D(0,1) * C(1,1)
               CASE (3)                            
                  C(0,0) = C(0,0) - A(0,1) * C(1,0)
                  C(0,1) = C(0,1) - A(0,1) * C(1,1)
                  C(0,2) = C(0,2) - A(0,1) * C(1,2)
                  F(0,0) = F(0,0) - D(0,1) * C(1,0)
                  F(0,1) = F(0,1) - D(0,1) * C(1,1)
                  F(0,2) = F(0,2) - D(0,1) * C(1,2)
               CASE (4)                            
                  C(0,0) = C(0,0) - A(0,1) * C(1,0)
                  C(0,1) = C(0,1) - A(0,1) * C(1,1)
                  C(0,2) = C(0,2) - A(0,1) * C(1,2)
                  C(0,3) = C(0,3) - A(0,1) * C(1,3)
                  F(0,0) = F(0,0) - D(0,1) * C(1,0)
                  F(0,1) = F(0,1) - D(0,1) * C(1,1)
                  F(0,2) = F(0,2) - D(0,1) * C(1,2)
                  F(0,3) = F(0,3) - D(0,1) * C(1,3)
               END SELECT
            CASE (2)
               SELECT CASE (N)
               CASE (1)
                  C(0,0) = C(0,0) - A(0,2) * C(2,0)
                  C(1,0) = C(1,0) - A(1,2) * C(2,0)
                  F(0,0) = F(0,0) - D(0,2) * C(2,0)
                  F(1,0) = F(1,0) - D(1,2) * C(2,0)
               CASE (2)                            
                  C(0,0) = C(0,0) - A(0,2) * C(2,0)
                  C(0,1) = C(0,1) - A(0,2) * C(2,1)
                  C(1,0) = C(1,0) - A(1,2) * C(2,0)
                  C(1,1) = C(1,1) - A(1,2) * C(2,1)
                  F(0,0) = F(0,0) - D(0,2) * C(2,0)
                  F(0,1) = F(0,1) - D(0,2) * C(2,1)
                  F(1,0) = F(1,0) - D(1,2) * C(2,0)
                  F(1,1) = F(1,1) - D(1,2) * C(2,1)
               CASE (3)                            
                  C(0,0) = C(0,0) - A(0,2) * C(2,0)
                  C(0,1) = C(0,1) - A(0,2) * C(2,1)
                  C(0,2) = C(0,2) - A(0,2) * C(2,2)
                  C(1,0) = C(1,0) - A(1,2) * C(2,0)
                  C(1,1) = C(1,1) - A(1,2) * C(2,1)
                  C(1,2) = C(1,2) - A(1,2) * C(2,2)
                  F(0,0) = F(0,0) - D(0,2) * C(2,0)
                  F(0,1) = F(0,1) - D(0,2) * C(2,1)
                  F(0,2) = F(0,2) - D(0,2) * C(2,2)
                  F(1,0) = F(1,0) - D(1,2) * C(2,0)
                  F(1,1) = F(1,1) - D(1,2) * C(2,1)
                  F(1,2) = F(1,2) - D(1,2) * C(2,2)
               CASE (4)                            
                  C(0,0) = C(0,0) - A(0,2) * C(2,0)
                  C(0,1) = C(0,1) - A(0,2) * C(2,1)
                  C(0,2) = C(0,2) - A(0,2) * C(2,2)
                  C(0,3) = C(0,3) - A(0,2) * C(2,3)
                  C(1,0) = C(1,0) - A(1,2) * C(2,0)
                  C(1,1) = C(1,1) - A(1,2) * C(2,1)
                  C(1,2) = C(1,2) - A(1,2) * C(2,2)
                  C(1,3) = C(1,3) - A(1,2) * C(2,3)
                  F(0,0) = F(0,0) - D(0,2) * C(2,0)
                  F(0,1) = F(0,1) - D(0,2) * C(2,1)
                  F(0,2) = F(0,2) - D(0,2) * C(2,2)
                  F(0,3) = F(0,3) - D(0,2) * C(2,3)
                  F(1,0) = F(1,0) - D(1,2) * C(2,0)
                  F(1,1) = F(1,1) - D(1,2) * C(2,1)
                  F(1,2) = F(1,2) - D(1,2) * C(2,2)
                  F(1,3) = F(1,3) - D(1,2) * C(2,3)
               END SELECT
            CASE (3)
               SELECT CASE (N)
               CASE (1)
                  C(0,0) = C(0,0) - A(0,3) * C(3,0)
                  C(1,0) = C(1,0) - A(1,3) * C(3,0)
                  C(2,0) = C(2,0) - A(2,3) * C(3,0)
                  F(0,0) = F(0,0) - D(0,3) * C(3,0)
                  F(1,0) = F(1,0) - D(1,3) * C(3,0)
                  F(2,0) = F(2,0) - D(2,3) * C(3,0)
               CASE (2)                            
                  C(0,0) = C(0,0) - A(0,3) * C(3,0)
                  C(0,1) = C(0,1) - A(0,3) * C(3,1)
                  C(1,0) = C(1,0) - A(1,3) * C(3,0)
                  C(1,1) = C(1,1) - A(1,3) * C(3,1)
                  C(2,0) = C(2,0) - A(2,3) * C(3,0)
                  C(2,1) = C(2,1) - A(2,3) * C(3,1)
                  F(0,0) = F(0,0) - D(0,3) * C(3,0)
                  F(0,1) = F(0,1) - D(0,3) * C(3,1)
                  F(1,0) = F(1,0) - D(1,3) * C(3,0)
                  F(1,1) = F(1,1) - D(1,3) * C(3,1)
                  F(2,0) = F(2,0) - D(2,3) * C(3,0)
                  F(2,1) = F(2,1) - D(2,3) * C(3,1)
               CASE (3)                            
                  C(0,0) = C(0,0) - A(0,3) * C(3,0)
                  C(0,1) = C(0,1) - A(0,3) * C(3,1)
                  C(0,2) = C(0,2) - A(0,3) * C(3,2)
                  C(1,0) = C(1,0) - A(1,3) * C(3,0)
                  C(1,1) = C(1,1) - A(1,3) * C(3,1)
                  C(1,2) = C(1,2) - A(1,3) * C(3,2)
                  C(2,0) = C(2,0) - A(2,3) * C(3,0)
                  C(2,1) = C(2,1) - A(2,3) * C(3,1)
                  C(2,2) = C(2,2) - A(2,3) * C(3,2)
                  F(0,0) = F(0,0) - D(0,3) * C(3,0)
                  F(0,1) = F(0,1) - D(0,3) * C(3,1)
                  F(0,2) = F(0,2) - D(0,3) * C(3,2)
                  F(1,0) = F(1,0) - D(1,3) * C(3,0)
                  F(1,1) = F(1,1) - D(1,3) * C(3,1)
                  F(1,2) = F(1,2) - D(1,3) * C(3,2)
                  F(2,0) = F(2,0) - D(2,3) * C(3,0)
                  F(2,1) = F(2,1) - D(2,3) * C(3,1)
                  F(2,2) = F(2,2) - D(2,3) * C(3,2)
               CASE (4)                            
                  C(0,0) = C(0,0) - A(0,3) * C(3,0)
                  C(0,1) = C(0,1) - A(0,3) * C(3,1)
                  C(0,2) = C(0,2) - A(0,3) * C(3,2)
                  C(0,3) = C(0,3) - A(0,3) * C(3,3)
                  C(1,0) = C(1,0) - A(1,3) * C(3,0)
                  C(1,1) = C(1,1) - A(1,3) * C(3,1)
                  C(1,2) = C(1,2) - A(1,3) * C(3,2)
                  C(1,3) = C(1,3) - A(1,3) * C(3,3)
                  C(2,0) = C(2,0) - A(2,3) * C(3,0)
                  C(2,1) = C(2,1) - A(2,3) * C(3,1)
                  C(2,2) = C(2,2) - A(2,3) * C(3,2)
                  C(2,3) = C(2,3) - A(2,3) * C(3,3)
                  F(0,0) = F(0,0) - D(0,3) * C(3,0)
                  F(0,1) = F(0,1) - D(0,3) * C(3,1)
                  F(0,2) = F(0,2) - D(0,3) * C(3,2)
                  F(0,3) = F(0,3) - D(0,3) * C(3,3)
                  F(1,0) = F(1,0) - D(1,3) * C(3,0)
                  F(1,1) = F(1,1) - D(1,3) * C(3,1)
                  F(1,2) = F(1,2) - D(1,3) * C(3,2)
                  F(1,3) = F(1,3) - D(1,3) * C(3,3)
                  F(2,0) = F(2,0) - D(2,3) * C(3,0)
                  F(2,1) = F(2,1) - D(2,3) * C(3,1)
                  F(2,2) = F(2,2) - D(2,3) * C(3,2)
                  F(2,3) = F(2,3) - D(2,3) * C(3,3)
               END SELECT
            END SELECT
         ELSE
            SELECT CASE (I)
            CASE (1)
               SELECT CASE (N)
               CASE (1)
                  C(0,0) = C(0,0) - A(0,1)*C(1,0) - A(0,2)*C(2,0)
                  F(0,0) = F(0,0) - D(0,1)*C(1,0) - D(0,2)*C(2,0)
               CASE (2)                            
                  C(0,0) = C(0,0) - A(0,1)*C(1,0) - A(0,2)*C(2,0)
                  C(0,1) = C(0,1) - A(0,1)*C(1,1) - A(0,2)*C(2,1)
                  F(0,0) = F(0,0) - D(0,1)*C(1,0) - D(0,2)*C(2,0)
                  F(0,1) = F(0,1) - D(0,1)*C(1,1) - D(0,2)*C(2,1)
               CASE (3)                            
                  C(0,0) = C(0,0) - A(0,1)*C(1,0) - A(0,2)*C(2,0)
                  C(0,1) = C(0,1) - A(0,1)*C(1,1) - A(0,2)*C(2,1)
                  C(0,2) = C(0,2) - A(0,1)*C(1,2) - A(0,2)*C(2,2)
                  F(0,0) = F(0,0) - D(0,1)*C(1,0) - D(0,2)*C(2,0)
                  F(0,1) = F(0,1) - D(0,1)*C(1,1) - D(0,2)*C(2,1)
                  F(0,2) = F(0,2) - D(0,1)*C(1,2) - D(0,2)*C(2,2)
               CASE (4)                            
                  C(0,0) = C(0,0) - A(0,1)*C(1,0) - A(0,2)*C(2,0)
                  C(0,1) = C(0,1) - A(0,1)*C(1,1) - A(0,2)*C(2,1)
                  C(0,2) = C(0,2) - A(0,1)*C(1,2) - A(0,2)*C(2,2)
                  C(0,3) = C(0,3) - A(0,1)*C(1,3) - A(0,2)*C(2,3)
                  F(0,0) = F(0,0) - D(0,1)*C(1,0) - D(0,2)*C(2,0)
                  F(0,1) = F(0,1) - D(0,1)*C(1,1) - D(0,2)*C(2,1)
                  F(0,2) = F(0,2) - D(0,1)*C(1,2) - D(0,2)*C(2,2)
                  F(0,3) = F(0,3) - D(0,1)*C(1,3) - D(0,2)*C(2,3)
               END SELECT
            CASE (2)
               SELECT CASE (N)
               CASE (1)
                  C(0,0) = C(0,0) - A(0,2)*C(2,0) - A(0,3)*C(3,0)
                  C(1,0) = C(1,0) - A(1,2)*C(2,0) - A(1,3)*C(3,0)
                  F(0,0) = F(0,0) - D(0,2)*C(2,0) - D(0,3)*C(3,0)
                  F(1,0) = F(1,0) - D(1,2)*C(2,0) - D(1,3)*C(3,0)
               CASE (2)                            
                  C(0,0) = C(0,0) - A(0,2)*C(2,0) - A(0,3)*C(3,0)
                  C(0,1) = C(0,1) - A(0,2)*C(2,1) - A(0,3)*C(3,1)
                  C(1,0) = C(1,0) - A(1,2)*C(2,0) - A(1,3)*C(3,0)
                  C(1,1) = C(1,1) - A(1,2)*C(2,1) - A(1,3)*C(3,1)
                  F(0,0) = F(0,0) - D(0,2)*C(2,0) - D(0,3)*C(3,0)
                  F(0,1) = F(0,1) - D(0,2)*C(2,1) - D(0,3)*C(3,1)
                  F(1,0) = F(1,0) - D(1,2)*C(2,0) - D(1,3)*C(3,0)
                  F(1,1) = F(1,1) - D(1,2)*C(2,1) - D(1,3)*C(3,1)
               CASE (3)                            
                  C(0,0) = C(0,0) - A(0,2)*C(2,0) - A(0,3)*C(3,0)
                  C(0,1) = C(0,1) - A(0,2)*C(2,1) - A(0,3)*C(3,1)
                  C(0,2) = C(0,2) - A(0,2)*C(2,2) - A(0,3)*C(3,2)
                  C(1,0) = C(1,0) - A(1,2)*C(2,0) - A(1,3)*C(3,0)
                  C(1,1) = C(1,1) - A(1,2)*C(2,1) - A(1,3)*C(3,1)
                  C(1,2) = C(1,2) - A(1,2)*C(2,2) - A(1,3)*C(3,2)
                  F(0,0) = F(0,0) - D(0,2)*C(2,0) - D(0,3)*C(3,0)
                  F(0,1) = F(0,1) - D(0,2)*C(2,1) - D(0,3)*C(3,1)
                  F(0,2) = F(0,2) - D(0,2)*C(2,2) - D(0,3)*C(3,2)
                  F(1,0) = F(1,0) - D(1,2)*C(2,0) - D(1,3)*C(3,0)
                  F(1,1) = F(1,1) - D(1,2)*C(2,1) - D(1,3)*C(3,1)
                  F(1,2) = F(1,2) - D(1,2)*C(2,2) - D(1,3)*C(3,2)
               CASE (4)                            
                  C(0,0) = C(0,0) - A(0,2)*C(2,0) - A(0,3)*C(3,0)
                  C(0,1) = C(0,1) - A(0,2)*C(2,1) - A(0,3)*C(3,1)
                  C(0,2) = C(0,2) - A(0,2)*C(2,2) - A(0,3)*C(3,2)
                  C(0,3) = C(0,3) - A(0,2)*C(2,3) - A(0,3)*C(3,3)
                  C(1,0) = C(1,0) - A(1,2)*C(2,0) - A(1,3)*C(3,0)
                  C(1,1) = C(1,1) - A(1,2)*C(2,1) - A(1,3)*C(3,1)
                  C(1,2) = C(1,2) - A(1,2)*C(2,2) - A(1,3)*C(3,2)
                  C(1,3) = C(1,3) - A(1,2)*C(2,3) - A(1,3)*C(3,3)
                  F(0,0) = F(0,0) - D(0,2)*C(2,0) - D(0,3)*C(3,0)
                  F(0,1) = F(0,1) - D(0,2)*C(2,1) - D(0,3)*C(3,1)
                  F(0,2) = F(0,2) - D(0,2)*C(2,2) - D(0,3)*C(3,2)
                  F(0,3) = F(0,3) - D(0,2)*C(2,3) - D(0,3)*C(3,3)
                  F(1,0) = F(1,0) - D(1,2)*C(2,0) - D(1,3)*C(3,0)
                  F(1,1) = F(1,1) - D(1,2)*C(2,1) - D(1,3)*C(3,1)
                  F(1,2) = F(1,2) - D(1,2)*C(2,2) - D(1,3)*C(3,2)
                  F(1,3) = F(1,3) - D(1,2)*C(2,3) - D(1,3)*C(3,3)
               END SELECT
            END SELECT
         END IF
         I = I-1
      END DO
      RETURN
      END SUBROUTINE RECGCSY_TR1
